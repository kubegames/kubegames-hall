// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app/service/room/service.proto

package room

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	types "github.com/kubegames/kubegames-hall/app/service/room/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("app/service/room/service.proto", fileDescriptor_22ee03eda8d67198) }

var fileDescriptor_22ee03eda8d67198 = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x95, 0xd1, 0x4e, 0xd4, 0x4c,
	0x14, 0xc7, 0xe9, 0x92, 0xef, 0x8b, 0x19, 0x76, 0x13, 0x18, 0xc4, 0xc5, 0x35, 0x96, 0xb1, 0x02,
	0x9a, 0x8d, 0x6c, 0x05, 0x8d, 0x31, 0xc4, 0x98, 0x80, 0x64, 0x0d, 0x17, 0x44, 0x83, 0x7a, 0xc3,
	0x85, 0xd8, 0x6e, 0x87, 0x32, 0xa1, 0xdb, 0x29, 0x9d, 0x16, 0xc5, 0x65, 0xd1, 0x78, 0xe5, 0xb5,
	0xde, 0xf8, 0x04, 0xc6, 0xd7, 0xf0, 0x8e, 0x4b, 0x13, 0x5f, 0x00, 0x56, 0x1f, 0xc0, 0x47, 0x30,
	0x9d, 0x4e, 0x97, 0x4e, 0x77, 0xbb, 0xeb, 0x4d, 0x77, 0xe7, 0x9c, 0xff, 0x9c, 0xdf, 0x7f, 0x4e,
	0xce, 0x64, 0x80, 0x6a, 0x78, 0x9e, 0xce, 0xb0, 0x7f, 0x40, 0x1a, 0x58, 0xf7, 0x29, 0x6d, 0x26,
	0x8b, 0x9a, 0xe7, 0xd3, 0x80, 0xc2, 0x62, 0x14, 0xdb, 0x16, 0xb1, 0x8a, 0xd6, 0xa3, 0x0e, 0x0e,
	0x3d, 0xcc, 0xe2, 0x6f, 0xbc, 0xa3, 0x32, 0x1b, 0x69, 0x1c, 0x62, 0xea, 0x36, 0xa5, 0xb6, 0x83,
	0x75, 0xc3, 0x23, 0xba, 0xe1, 0xba, 0x34, 0x30, 0x02, 0x42, 0xdd, 0x44, 0x85, 0xce, 0x55, 0x36,
	0xd5, 0x79, 0xcc, 0x0c, 0x77, 0xf8, 0x4a, 0x28, 0xee, 0x25, 0x0a, 0xbe, 0x6c, 0x6c, 0xdb, 0xd8,
	0xdd, 0xa6, 0x1e, 0x76, 0x0d, 0x8f, 0x1c, 0x2c, 0xe9, 0xd4, 0xe3, 0xd5, 0x7a, 0x2b, 0x2f, 0x7d,
	0x1f, 0x03, 0x63, 0x9b, 0x94, 0x36, 0x9f, 0xc5, 0x36, 0xa1, 0x0d, 0xc6, 0x56, 0x2c, 0xeb, 0xb1,
	0xd1, 0xc4, 0x51, 0x14, 0xaa, 0x35, 0x7e, 0xa2, 0xd8, 0x71, 0x2a, 0xb1, 0x89, 0xf7, 0x43, 0xcc,
	0x82, 0xca, 0x4c, 0x6e, 0x9e, 0x79, 0xd4, 0x65, 0x58, 0x2b, 0x7f, 0xf8, 0xf9, 0xfb, 0x73, 0x61,
	0x42, 0x2b, 0xc6, 0x0d, 0x38, 0x58, 0xd4, 0x0d, 0xcb, 0x5a, 0x56, 0xaa, 0x70, 0x0f, 0x14, 0x53,
	0x7a, 0x06, 0xf3, 0x2a, 0xb1, 0x04, 0x85, 0xf2, 0x05, 0x82, 0x35, 0xcd, 0x59, 0x50, 0x2b, 0xa5,
	0x59, 0x4c, 0xc0, 0x9e, 0x78, 0xd8, 0xed, 0x1e, 0x4b, 0x82, 0xa5, 0x33, 0x7d, 0x61, 0xb2, 0x20,
	0x17, 0x16, 0xb5, 0x3b, 0x82, 0x85, 0xa0, 0xf4, 0xc8, 0xa1, 0x0c, 0x77, 0x69, 0x52, 0x31, 0x29,
	0x95, 0xe0, 0xae, 0x0d, 0x50, 0x08, 0xde, 0x0c, 0xe7, 0x5d, 0xae, 0x96, 0xbb, 0xbc, 0x46, 0xa4,
	0xd3, 0x5b, 0xd1, 0x72, 0x7d, 0xad, 0x0d, 0x8f, 0x41, 0xa9, 0x4e, 0xdc, 0x54, 0x47, 0x25, 0xac,
	0x94, 0xea, 0x8b, 0xcd, 0x28, 0x04, 0xf6, 0x26, 0xc7, 0x6a, 0x10, 0x75, 0xb1, 0x3b, 0xc4, 0xb5,
	0x98, 0xde, 0xb2, 0x8d, 0x26, 0x5e, 0x5f, 0x6b, 0xeb, 0x2d, 0x16, 0x18, 0x41, 0xc8, 0xda, 0x70,
	0x1f, 0x14, 0xd3, 0x25, 0xe4, 0x1e, 0xa7, 0x33, 0x7d, 0x7b, 0x2c, 0x0b, 0x04, 0x5c, 0xe5, 0xf0,
	0x69, 0x78, 0x49, 0x82, 0x9f, 0x1f, 0xf9, 0x08, 0x8c, 0xa7, 0x06, 0xe1, 0x29, 0xa5, 0x0e, 0x83,
	0xd7, 0x73, 0xc6, 0x84, 0x67, 0x13, 0xf4, 0xec, 0x60, 0x91, 0xc0, 0x5f, 0xe5, 0xf8, 0xb2, 0x06,
	0x63, 0xbc, 0x47, 0xa9, 0x93, 0x1e, 0xaa, 0x23, 0x30, 0xbe, 0x9a, 0x72, 0x1d, 0xed, 0x95, 0xe9,
	0xd9, 0x6c, 0x5f, 0x7a, 0xaf, 0x68, 0x30, 0xdd, 0x24, 0x2e, 0xbf, 0x3f, 0x1f, 0x15, 0x30, 0xf9,
	0xc2, 0x35, 0x69, 0x98, 0x71, 0x30, 0x9f, 0x2e, 0xde, 0x47, 0x90, 0x98, 0xb8, 0x31, 0x54, 0x27,
	0x7c, 0x20, 0xee, 0xa3, 0xa2, 0x4d, 0xc9, 0x3e, 0xc2, 0x78, 0x4b, 0x64, 0xe5, 0x1d, 0x80, 0x6b,
	0xd8, 0xc1, 0x01, 0x96, 0x8c, 0xcc, 0xa5, 0x01, 0xbd, 0xf9, 0xc4, 0xc7, 0xfc, 0x30, 0x99, 0xb0,
	0x51, 0xe1, 0x36, 0x2e, 0x56, 0x33, 0xed, 0x68, 0x11, 0xab, 0x0d, 0xdb, 0x60, 0xa2, 0x9e, 0x69,
	0x23, 0x83, 0xb3, 0x79, 0xe3, 0x25, 0x4d, 0xc2, 0xdc, 0x10, 0x95, 0xa0, 0x5f, 0xe1, 0xf4, 0x29,
	0x38, 0x29, 0xd3, 0xf9, 0x5d, 0x80, 0xc7, 0x60, 0xbc, 0x3e, 0x70, 0x10, 0xea, 0xff, 0x32, 0x08,
	0xf5, 0xbc, 0x41, 0x10, 0x37, 0x1f, 0x96, 0x7b, 0xd9, 0xfc, 0xf8, 0xab, 0xef, 0x0b, 0x9f, 0x56,
	0xbe, 0x2a, 0x70, 0x01, 0xcc, 0xec, 0x85, 0x26, 0x8e, 0x2e, 0x26, 0x43, 0xd1, 0x17, 0x45, 0x7a,
	0x64, 0x78, 0x04, 0xb1, 0xd7, 0x86, 0x6d, 0x63, 0xbf, 0xfa, 0x1f, 0x18, 0xdd, 0x58, 0x7f, 0xbe,
	0x34, 0xba, 0x58, 0xbb, 0xbd, 0xf5, 0x0a, 0xbc, 0x04, 0xa5, 0x95, 0x30, 0xd8, 0xa5, 0x3e, 0x79,
	0xcb, 0xdf, 0x04, 0xb8, 0x71, 0xa1, 0x00, 0xef, 0x47, 0x21, 0xec, 0x06, 0xa4, 0xc1, 0x63, 0x28,
	0xa0, 0x7b, 0xd8, 0xbd, 0x85, 0x3c, 0x1f, 0xef, 0x90, 0x37, 0xd8, 0x42, 0xe6, 0x21, 0x5a, 0xc5,
	0x86, 0x8f, 0xfd, 0x65, 0xf1, 0x8b, 0x1e, 0x70, 0xc9, 0xc3, 0x8a, 0x5c, 0x0c, 0x15, 0xcc, 0x49,
	0x30, 0x91, 0x25, 0x8c, 0x9c, 0x9c, 0xa9, 0x23, 0xa7, 0x67, 0xaa, 0xf2, 0xe7, 0x4c, 0x55, 0xbe,
	0x75, 0x54, 0xe5, 0xa4, 0xa3, 0x2a, 0x3f, 0x3a, 0xaa, 0x72, 0xda, 0x51, 0x95, 0x2f, 0xbf, 0xd4,
	0x91, 0xad, 0xbb, 0x36, 0x09, 0x76, 0x43, 0xb3, 0xd6, 0xa0, 0x4d, 0xbd, 0x7b, 0x9c, 0xf3, 0x7f,
	0x0b, 0xbb, 0x86, 0xe3, 0xe8, 0xd9, 0x87, 0xd5, 0xfc, 0x9f, 0xbf, 0x66, 0x77, 0xfe, 0x06, 0x00,
	0x00, 0xff, 0xff, 0xa1, 0x01, 0x7e, 0xd7, 0xa1, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoomServiceClient is the client API for RoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServiceClient interface {
	//添加游戏房间
	AddGameRoom(ctx context.Context, in *types.AddGameRoomRequest, opts ...grpc.CallOption) (*types.AddGameRoomResponse, error)
	//批量添加游戏房间
	AddGameRooms(ctx context.Context, in *types.AddGameRoomsRequest, opts ...grpc.CallOption) (*types.AddGameRoomsResponse, error)
	//开启游戏房间
	OpenGameRoom(ctx context.Context, in *types.OpenGameRoomRequest, opts ...grpc.CallOption) (*types.OpenGameRoomResponse, error)
	//关闭游戏房间
	CloseGameRoom(ctx context.Context, in *types.CloseGameRoomRequest, opts ...grpc.CallOption) (*types.CloseGameRoomResponse, error)
	//查找游戏房间列表
	FindGameRooms(ctx context.Context, in *types.FindGameRoomsRequest, opts ...grpc.CallOption) (*types.FindGameRoomsResponse, error)
	//查找房间信息
	FindGameRoom(ctx context.Context, in *types.FindGameRoomRequest, opts ...grpc.CallOption) (*types.FindGameRoomResponse, error)
	// 添加游戏房间血池
	AddGameRoomPools(ctx context.Context, in *types.AddGameRoomPoolsRequest, opts ...grpc.CallOption) (*types.AddGameRoomPoolsResponse, error)
	// 绑定游戏房间血池
	BindGameRoomPool(ctx context.Context, in *types.BindGameRoomPoolRequest, opts ...grpc.CallOption) (*types.BindGameRoomPoolResponse, error)
	// 解绑游戏房间血池
	UnboundGameRoomPool(ctx context.Context, in *types.UnboundGameRoomPoolRequest, opts ...grpc.CallOption) (*types.UnboundGameRoomPoolResponse, error)
	// 删除游戏房间血池
	DeleteGameRoomPool(ctx context.Context, in *types.DeleteGameRoomPoolRequest, opts ...grpc.CallOption) (*types.DeleteGameRoomPoolResponse, error)
	// 查询游戏血池列表
	FindGameRoomPools(ctx context.Context, in *types.FindGameRoomPoolsRequest, opts ...grpc.CallOption) (*types.FindGameRoomPoolsResponse, error)
	// 查询游戏血池
	FindGameRoomPool(ctx context.Context, in *types.FindGameRoomPoolRequest, opts ...grpc.CallOption) (*types.FindGameRoomPoolResponse, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) AddGameRoom(ctx context.Context, in *types.AddGameRoomRequest, opts ...grpc.CallOption) (*types.AddGameRoomResponse, error) {
	out := new(types.AddGameRoomResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/AddGameRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) AddGameRooms(ctx context.Context, in *types.AddGameRoomsRequest, opts ...grpc.CallOption) (*types.AddGameRoomsResponse, error) {
	out := new(types.AddGameRoomsResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/AddGameRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) OpenGameRoom(ctx context.Context, in *types.OpenGameRoomRequest, opts ...grpc.CallOption) (*types.OpenGameRoomResponse, error) {
	out := new(types.OpenGameRoomResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/OpenGameRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) CloseGameRoom(ctx context.Context, in *types.CloseGameRoomRequest, opts ...grpc.CallOption) (*types.CloseGameRoomResponse, error) {
	out := new(types.CloseGameRoomResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/CloseGameRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) FindGameRooms(ctx context.Context, in *types.FindGameRoomsRequest, opts ...grpc.CallOption) (*types.FindGameRoomsResponse, error) {
	out := new(types.FindGameRoomsResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/FindGameRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) FindGameRoom(ctx context.Context, in *types.FindGameRoomRequest, opts ...grpc.CallOption) (*types.FindGameRoomResponse, error) {
	out := new(types.FindGameRoomResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/FindGameRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) AddGameRoomPools(ctx context.Context, in *types.AddGameRoomPoolsRequest, opts ...grpc.CallOption) (*types.AddGameRoomPoolsResponse, error) {
	out := new(types.AddGameRoomPoolsResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/AddGameRoomPools", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) BindGameRoomPool(ctx context.Context, in *types.BindGameRoomPoolRequest, opts ...grpc.CallOption) (*types.BindGameRoomPoolResponse, error) {
	out := new(types.BindGameRoomPoolResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/BindGameRoomPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) UnboundGameRoomPool(ctx context.Context, in *types.UnboundGameRoomPoolRequest, opts ...grpc.CallOption) (*types.UnboundGameRoomPoolResponse, error) {
	out := new(types.UnboundGameRoomPoolResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/UnboundGameRoomPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) DeleteGameRoomPool(ctx context.Context, in *types.DeleteGameRoomPoolRequest, opts ...grpc.CallOption) (*types.DeleteGameRoomPoolResponse, error) {
	out := new(types.DeleteGameRoomPoolResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/DeleteGameRoomPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) FindGameRoomPools(ctx context.Context, in *types.FindGameRoomPoolsRequest, opts ...grpc.CallOption) (*types.FindGameRoomPoolsResponse, error) {
	out := new(types.FindGameRoomPoolsResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/FindGameRoomPools", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) FindGameRoomPool(ctx context.Context, in *types.FindGameRoomPoolRequest, opts ...grpc.CallOption) (*types.FindGameRoomPoolResponse, error) {
	out := new(types.FindGameRoomPoolResponse)
	err := c.cc.Invoke(ctx, "/room_service.RoomService/FindGameRoomPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServiceServer is the server API for RoomService service.
type RoomServiceServer interface {
	//添加游戏房间
	AddGameRoom(context.Context, *types.AddGameRoomRequest) (*types.AddGameRoomResponse, error)
	//批量添加游戏房间
	AddGameRooms(context.Context, *types.AddGameRoomsRequest) (*types.AddGameRoomsResponse, error)
	//开启游戏房间
	OpenGameRoom(context.Context, *types.OpenGameRoomRequest) (*types.OpenGameRoomResponse, error)
	//关闭游戏房间
	CloseGameRoom(context.Context, *types.CloseGameRoomRequest) (*types.CloseGameRoomResponse, error)
	//查找游戏房间列表
	FindGameRooms(context.Context, *types.FindGameRoomsRequest) (*types.FindGameRoomsResponse, error)
	//查找房间信息
	FindGameRoom(context.Context, *types.FindGameRoomRequest) (*types.FindGameRoomResponse, error)
	// 添加游戏房间血池
	AddGameRoomPools(context.Context, *types.AddGameRoomPoolsRequest) (*types.AddGameRoomPoolsResponse, error)
	// 绑定游戏房间血池
	BindGameRoomPool(context.Context, *types.BindGameRoomPoolRequest) (*types.BindGameRoomPoolResponse, error)
	// 解绑游戏房间血池
	UnboundGameRoomPool(context.Context, *types.UnboundGameRoomPoolRequest) (*types.UnboundGameRoomPoolResponse, error)
	// 删除游戏房间血池
	DeleteGameRoomPool(context.Context, *types.DeleteGameRoomPoolRequest) (*types.DeleteGameRoomPoolResponse, error)
	// 查询游戏血池列表
	FindGameRoomPools(context.Context, *types.FindGameRoomPoolsRequest) (*types.FindGameRoomPoolsResponse, error)
	// 查询游戏血池
	FindGameRoomPool(context.Context, *types.FindGameRoomPoolRequest) (*types.FindGameRoomPoolResponse, error)
}

// UnimplementedRoomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoomServiceServer struct {
}

func (*UnimplementedRoomServiceServer) AddGameRoom(ctx context.Context, req *types.AddGameRoomRequest) (*types.AddGameRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGameRoom not implemented")
}
func (*UnimplementedRoomServiceServer) AddGameRooms(ctx context.Context, req *types.AddGameRoomsRequest) (*types.AddGameRoomsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGameRooms not implemented")
}
func (*UnimplementedRoomServiceServer) OpenGameRoom(ctx context.Context, req *types.OpenGameRoomRequest) (*types.OpenGameRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenGameRoom not implemented")
}
func (*UnimplementedRoomServiceServer) CloseGameRoom(ctx context.Context, req *types.CloseGameRoomRequest) (*types.CloseGameRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseGameRoom not implemented")
}
func (*UnimplementedRoomServiceServer) FindGameRooms(ctx context.Context, req *types.FindGameRoomsRequest) (*types.FindGameRoomsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindGameRooms not implemented")
}
func (*UnimplementedRoomServiceServer) FindGameRoom(ctx context.Context, req *types.FindGameRoomRequest) (*types.FindGameRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindGameRoom not implemented")
}
func (*UnimplementedRoomServiceServer) AddGameRoomPools(ctx context.Context, req *types.AddGameRoomPoolsRequest) (*types.AddGameRoomPoolsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGameRoomPools not implemented")
}
func (*UnimplementedRoomServiceServer) BindGameRoomPool(ctx context.Context, req *types.BindGameRoomPoolRequest) (*types.BindGameRoomPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindGameRoomPool not implemented")
}
func (*UnimplementedRoomServiceServer) UnboundGameRoomPool(ctx context.Context, req *types.UnboundGameRoomPoolRequest) (*types.UnboundGameRoomPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnboundGameRoomPool not implemented")
}
func (*UnimplementedRoomServiceServer) DeleteGameRoomPool(ctx context.Context, req *types.DeleteGameRoomPoolRequest) (*types.DeleteGameRoomPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGameRoomPool not implemented")
}
func (*UnimplementedRoomServiceServer) FindGameRoomPools(ctx context.Context, req *types.FindGameRoomPoolsRequest) (*types.FindGameRoomPoolsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindGameRoomPools not implemented")
}
func (*UnimplementedRoomServiceServer) FindGameRoomPool(ctx context.Context, req *types.FindGameRoomPoolRequest) (*types.FindGameRoomPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindGameRoomPool not implemented")
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_AddGameRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.AddGameRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).AddGameRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/AddGameRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).AddGameRoom(ctx, req.(*types.AddGameRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_AddGameRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.AddGameRoomsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).AddGameRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/AddGameRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).AddGameRooms(ctx, req.(*types.AddGameRoomsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_OpenGameRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.OpenGameRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).OpenGameRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/OpenGameRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).OpenGameRoom(ctx, req.(*types.OpenGameRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_CloseGameRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.CloseGameRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CloseGameRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/CloseGameRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CloseGameRoom(ctx, req.(*types.CloseGameRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_FindGameRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.FindGameRoomsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).FindGameRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/FindGameRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).FindGameRooms(ctx, req.(*types.FindGameRoomsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_FindGameRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.FindGameRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).FindGameRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/FindGameRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).FindGameRoom(ctx, req.(*types.FindGameRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_AddGameRoomPools_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.AddGameRoomPoolsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).AddGameRoomPools(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/AddGameRoomPools",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).AddGameRoomPools(ctx, req.(*types.AddGameRoomPoolsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_BindGameRoomPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.BindGameRoomPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).BindGameRoomPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/BindGameRoomPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).BindGameRoomPool(ctx, req.(*types.BindGameRoomPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_UnboundGameRoomPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.UnboundGameRoomPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).UnboundGameRoomPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/UnboundGameRoomPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).UnboundGameRoomPool(ctx, req.(*types.UnboundGameRoomPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_DeleteGameRoomPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.DeleteGameRoomPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).DeleteGameRoomPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/DeleteGameRoomPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).DeleteGameRoomPool(ctx, req.(*types.DeleteGameRoomPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_FindGameRoomPools_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.FindGameRoomPoolsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).FindGameRoomPools(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/FindGameRoomPools",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).FindGameRoomPools(ctx, req.(*types.FindGameRoomPoolsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_FindGameRoomPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.FindGameRoomPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).FindGameRoomPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/room_service.RoomService/FindGameRoomPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).FindGameRoomPool(ctx, req.(*types.FindGameRoomPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "room_service.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddGameRoom",
			Handler:    _RoomService_AddGameRoom_Handler,
		},
		{
			MethodName: "AddGameRooms",
			Handler:    _RoomService_AddGameRooms_Handler,
		},
		{
			MethodName: "OpenGameRoom",
			Handler:    _RoomService_OpenGameRoom_Handler,
		},
		{
			MethodName: "CloseGameRoom",
			Handler:    _RoomService_CloseGameRoom_Handler,
		},
		{
			MethodName: "FindGameRooms",
			Handler:    _RoomService_FindGameRooms_Handler,
		},
		{
			MethodName: "FindGameRoom",
			Handler:    _RoomService_FindGameRoom_Handler,
		},
		{
			MethodName: "AddGameRoomPools",
			Handler:    _RoomService_AddGameRoomPools_Handler,
		},
		{
			MethodName: "BindGameRoomPool",
			Handler:    _RoomService_BindGameRoomPool_Handler,
		},
		{
			MethodName: "UnboundGameRoomPool",
			Handler:    _RoomService_UnboundGameRoomPool_Handler,
		},
		{
			MethodName: "DeleteGameRoomPool",
			Handler:    _RoomService_DeleteGameRoomPool_Handler,
		},
		{
			MethodName: "FindGameRoomPools",
			Handler:    _RoomService_FindGameRoomPools_Handler,
		},
		{
			MethodName: "FindGameRoomPool",
			Handler:    _RoomService_FindGameRoomPool_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/service/room/service.proto",
}
